@model IEnumerable<FriendlySeed.Models.Role>

@{
    ViewData["Title"] = "角色管理";
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="fas fa-users-cog"></i> 角色管理
                </h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-success btn-sm" onclick="exportToExcel()">
                        <i class="fas fa-file-excel"></i> 匯出 Excel
                    </button>
                    <button type="button" class="btn btn-primary btn-sm" onclick="openCreateModal()">
                        <i class="fas fa-plus"></i> 新增角色
                    </button>
                </div>
            </div>
            <div class="card-body">
                <table id="roleTable" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>角色ID</th>
                            <th>角色名稱</th>
                            <th>建立時間</th>
                            <th>更新時間</th>
                            <th>狀態</th>
                            <th>操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var role in Model)
                        {
                            <tr>
                                <td>@role.RoleID</td>
                                <td>
                                    <strong>@role.RoleName</strong>
                                </td>
                                <td>@role.CreatedTime.ToString("yyyy-MM-dd HH:mm")</td>
                                <td>@role.UpdatedTime.ToString("yyyy-MM-dd HH:mm")</td>
                                <td>
                                    <span class="badge @(role.IsActive ? "badge-success" : "badge-danger")">
                                        @(role.IsActive ? "啟用" : "停用")
                                    </span>
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <button type="button" class="btn btn-info btn-sm" onclick="openEditModal(@role.RoleID)">
                                            <i class="fas fa-edit"></i> 編輯
                                        </button>
                                        <button type="button" class="btn btn-warning btn-sm" onclick="toggleStatus(@role.RoleID)">
                                            <i class="fas fa-toggle-@(role.IsActive ? "on" : "off")"></i> 
                                            @(role.IsActive ? "停用" : "啟用")
                                        </button>
                                        <button type="button" class="btn btn-danger btn-sm" onclick="deleteRole(@role.RoleID, '@Html.Raw(System.Web.HttpUtility.JavaScriptStringEncode(role.RoleName))')">
                                            <i class="fas fa-trash"></i> 刪除
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- 新增/編輯 Modal -->
<div class="modal fade" id="roleModal" tabindex="-1" aria-labelledby="roleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="roleModalLabel">新增角色</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="roleForm">
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="RoleID" name="RoleID" value="0">
                    
                    <div class="mb-3">
                        <label for="RoleName" class="form-label">角色名稱 <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="RoleName" name="RoleName" required maxlength="50">
                        <div class="invalid-feedback"></div>
                    </div>
                    
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="IsActive" name="IsActive" checked>
                            <label class="form-check-label" for="IsActive">
                                啟用狀態
                            </label>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">選單權限</label>
                        <div id="menuCheckboxes" class="border rounded p-3" style="max-height: 200px; overflow-y: auto;">
                            @if (ViewBag.Menus != null)
                            {
                                @foreach (var menu in ViewBag.Menus)
                                {
                                    @if (menu.ParentID != null) // 只顯示子選單
                                    {
                                        <div class="form-check">
                                            <input class="form-check-input menu-checkbox" type="checkbox" 
                                                   id="menu_@menu.MenuID" 
                                                   name="selectedMenuIds" 
                                                   value="@menu.MenuID">
                                            <label class="form-check-label" for="menu_@menu.MenuID">
                                                @menu.MenuName
                                            </label>
                                        </div>
                                    }
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                    <button type="submit" class="btn btn-primary">儲存</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let roleTable;
        let isEditMode = false;

        $(document).ready(function() {
            // DataTable 由 admin.js 自動初始化，這裡不需要手動初始化

            // 表單提交事件
            $('#roleForm').on('submit', function(e) {
                e.preventDefault();
                
                if (isEditMode) {
                    editRole();
                } else {
                    createRole();
                }
            });

            // 重置表單
            $('#roleModal').on('hidden.bs.modal', function() {
                resetForm();
            });
        });

        function openCreateModal() {
            isEditMode = false;
            $('#roleModalLabel').text('新增角色');
            resetForm();
            $('#roleModal').modal('show');
        }

        function openEditModal(id) {
            isEditMode = true;
            $('#roleModalLabel').text('編輯角色');
            
            $.ajax({
                url: '/Admin/Role/GetRole/' + id,
                type: 'GET',
                success: function(response) {
                    if (response.success) {
                        const role = response.data;
                        $('#RoleID').val(role.roleID);
                        $('#RoleName').val(role.roleName);
                        $('#IsActive').prop('checked', role.isActive);
                        
                        // 清除所有選單權限選擇
                        $('.menu-checkbox').prop('checked', false);
                        
                        // 設定已選擇的選單權限
                        if (role.selectedMenuIds && role.selectedMenuIds.length > 0) {
                            role.selectedMenuIds.forEach(function(menuId) {
                                $('#menu_' + menuId).prop('checked', true);
                            });
                        }
                        
                        $('#roleModal').modal('show');
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function() {
                    toastr.error('取得角色資料時發生錯誤');
                }
            });
        }

        function createRole() {
            // 取得選中的選單權限
            const selectedMenuIds = [];
            $('.menu-checkbox:checked').each(function() {
                selectedMenuIds.push(parseInt($(this).val()));
            });
            
            const formData = {
                RoleName: $('#RoleName').val(),
                IsActive: $('#IsActive').is(':checked'),
                selectedMenuIds: selectedMenuIds,
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
            };

            $.ajax({
                url: '/Admin/Role/Create',
                type: 'POST',
                data: formData,
                success: function(response) {
                    if (response.success) {
                        toastr.success(response.message);
                        $('#roleModal').modal('hide');
                        location.reload();
                    } else {
                        toastr.error(response.message);
                        if (response.errors) {
                            response.errors.forEach(error => {
                                toastr.error(error);
                            });
                        }
                    }
                },
                error: function() {
                    toastr.error('建立角色時發生錯誤');
                }
            });
        }

        function editRole() {
            // 取得選中的選單權限
            const selectedMenuIds = [];
            $('.menu-checkbox:checked').each(function() {
                selectedMenuIds.push(parseInt($(this).val()));
            });
            
            const formData = {
                RoleID: $('#RoleID').val(),
                RoleName: $('#RoleName').val(),
                IsActive: $('#IsActive').is(':checked'),
                selectedMenuIds: selectedMenuIds,
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
            };

            $.ajax({
                url: '/Admin/Role/Edit',
                type: 'POST',
                data: formData,
                success: function(response) {
                    console.log('Edit response:', response);
                    if (response.success) {
                        console.log('Edit successful, showing toastr');
                        toastr.success(response.message);
                        $('#roleModal').modal('hide');
                        // 延遲重新載入，讓使用者看到成功訊息
                        setTimeout(function() {
                            location.reload();
                        }, 1500);
                    } else {
                        console.log('Edit failed, showing error');
                        toastr.error(response.message);
                        if (response.errors) {
                            response.errors.forEach(error => {
                                toastr.error(error);
                            });
                        }
                    }
                },
                error: function() {
                    console.log('Edit AJAX error');
                    toastr.error('更新角色時發生錯誤');
                }
            });
        }

        function toggleStatus(id) {
            Swal.fire({
                title: '確認操作',
                text: '您確定要切換此角色的狀態嗎？',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: '確定',
                cancelButtonText: '取消'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Admin/Role/ToggleStatus',
                        type: 'POST',
                        data: {
                            id: id,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function(response) {
                            if (response.success) {
                                toastr.success(response.message);
                                location.reload();
                            } else {
                                toastr.error(response.message);
                            }
                        },
                        error: function() {
                            toastr.error('更新狀態時發生錯誤');
                        }
                    });
                }
            });
        }

        function deleteRole(id, roleName) {
            Swal.fire({
                title: '確認刪除',
                text: `您確定要刪除角色「${roleName}」嗎？此操作無法復原。`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: '確定刪除',
                cancelButtonText: '取消',
                confirmButtonColor: '#d33'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Admin/Role/Delete',
                        type: 'POST',
                        data: {
                            id: id,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function(response) {
                            if (response.success) {
                                toastr.success(response.message);
                                location.reload();
                            } else {
                                toastr.error(response.message);
                            }
                        },
                        error: function() {
                            toastr.error('刪除角色時發生錯誤');
                        }
                    });
                }
            });
        }

        function resetForm() {
            $('#roleForm')[0].reset();
            $('#RoleID').val('0');
            $('#IsActive').prop('checked', true);
            $('.menu-checkbox').prop('checked', false);
            $('.invalid-feedback').text('');
            $('.form-control').removeClass('is-invalid');
        }

        function exportToExcel() {
            // 使用 DataTable 的按鈕功能來匯出 Excel
            var table = $('#roleTable').DataTable();
            table.button('.buttons-excel').trigger();
        }
    </script>
}
